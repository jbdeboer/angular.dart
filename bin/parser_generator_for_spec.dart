import 'package:di/di.dart';
import 'package:angular/parser/parser_library.dart';
import 'package:angular/tools/parser_generator/dart_code_gen.dart';
import 'package:angular/tools/parser_generator/generator.dart';

main() {
  Module module = new Module()
    ..type(ParserBackend, DartCodeGen);

  Injector injector = new Injector([module]);

  // List generated using:
  // node node_modules/karma/bin/karma run | grep -Eo ":XNAY:.*:XNAY:" | sed -e 's/:XNAY://g' | sed -e "s/^/'/" | sed -e "s/$/',/" | sort | uniq > missing_expressions
  injector.get(ParserGenerator).generateParser([
      "1", "-1", "+1",
      "!true",
      "3*4/2%5", "3+6-2",
  "2<3", "2>3", "2<=2", "2>=2",
  "2==3", "2!=3",
  "true&&true", "true&&false",
      "true||true", "true||false", "false||false",
"'str ' + 4", "4 + ' str'", "4 + 4", "4 + 4 + ' str'",
"'str ' + 4 + 4",
      "a", "b.c" , "x.y.z",
      'ident.id(6)', 'ident.doubleId(4,5)',
      "a.b.c.d.e.f.g.h.i.j.k.l.m.n",
      'b', 'a.x', 'a.b.c.d',
      "(1+2)*3",
      "a=12", "arr[c=1]", "x.y.z=123;",
      "a=123; b=234",
      "constN()", "const",
      "add(1,2)",
      "getter()()",
      "obj.elementAt(0)",
      "this['a'].b",
      "[]",
      "[1, 2]",
      "[1][0]",
      "[[1]][0][0]",
      "[].length",
"[1, 2].length",
      "{}",
"{a:'b'}",
    "{'a':'b'}",
"{\"a\":'b'}",
      "{false:'WC', true:'CC'}[false]",
')',
'[{}]',
'0&&2',
'1%2',
'1 + 2.5',
'1+undefined',
'4()',
'4|a',
'5=4',
'6[3]',
'{a',
'a[1]=2',
'a=1;b=3;a+b',
'a.b',
'a(b',
'\'a\' + \'b c\'',
'a().name',
'a[x()]()',
'boo',
'[].count(',
'doesNotExist()',
'false',
'false && run()',
'!false || true',
'foo()',
'\$id',
'items[1] = "abc"',
'items[1].name',
'list[3] = 2',
'map["square"] = 6',
'method',
'method()',
'notAFn()',
'notmixed',
'null',
'null[3]',
'obj[0].name=1',
'obj.field = 1',
'obj.field.key = 4',
'obj.integer = "hello"',
'obj.map.mapKey = 3',
'obj.nested.field = 1',
'obj.overload = 7',
'obj.setter = 2',
'str',
'str="bob"',
'suffix = "!"',
'taxRate / 100 * subTotal',
'true',
'true || run()',
'undefined',

';;1;;',
'1==1',
'!(11 == 10)',
'1 + -2.5',
'[{a',
'{a',
'array[5=4]',
'map.null',
'\$root',
'subTotal * taxRate / 100',
'!!true',

      '1!=2',
'1+2*3/4',
'[{a',
'{a',
'\$parent',
'{true',

'0--1+1.5',
'1<2',
'[{a',
'{a',
'{true',
'1<=1',

      '1>2',
'{a:\'-\'}',
'{a:a}',
'[{a:[]}, {b:1}]',
'{true:"a", false:"b"}[!!true]',

      '2>=1',
      'true==2<3',
'6[3]=2',

      'map.dot = 7',
      'exists(doesNotExist())',
      'doesNotExists(exists())',
      'a[0]()',
      'a[x()]()',
      '{}()',
      'items[1]',
      "-0--1++2*-3/-4",
      "1/2*3",
      "0||2",
"0||1&&2",
      'undefined+1',
      "12/6/2",
      "a=undefined",
'add(a,b)',

  ]);
}
